## HelmRelease pentru kube-prometheus-stack: Prometheus, Grafana, AlertManager, È™i operatori
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: flux-system
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: ">=61.0.0 <62.0.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 12h
  targetNamespace: monitoring
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    # Prometheus configuration
    prometheus:
      prometheusSpec:
        retention: 30d
        retentionSize: 10GB
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 15Gi
        resources:
          requests:
            memory: 512Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
        # Enable service discovery for all namespaces
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        podMonitorSelector: {}
        ruleSelector: {}
    
    # Grafana configuration
    grafana:
      enabled: true
      adminPassword: admin # Change this in production!
      persistence:
        enabled: true
        storageClassName: local-path
        size: 5Gi
      resources:
        requests:
          memory: 128Mi
          cpu: 50m
        limits:
          memory: 512Mi
          cpu: 500m
      # Enable anonymous access for easier development
      grafana.ini:
        auth.anonymous:
          enabled: true
          org_role: Viewer
        security:
          allow_embedding: true
    
    # AlertManager configuration
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 2Gi
        resources:
          requests:
            memory: 64Mi
            cpu: 25m
          limits:
            memory: 256Mi
            cpu: 200m
    
    # Node Exporter configuration
    nodeExporter:
      enabled: true
    
    # Kube State Metrics configuration
    kubeStateMetrics:
      enabled: true
    
    # Default rules and alerts
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        configReloaders: true
        general: true
        k8s: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubelet: true
        kubeProxy: true
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
