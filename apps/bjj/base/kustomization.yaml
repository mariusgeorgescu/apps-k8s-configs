# Kustomization base pentru aplicația bjjbackend (model app-owned).
# Setează namespace-ul și etichetele comune, apoi compune resursele (ConfigMap, Gateway, Service, Deployments, Routes, etc.).
apiVersion: kustomize.config.k8s.io/v1beta1 # Versiunea API pentru Kustomize
kind: Kustomization # Declară acest fișier ca o Kustomization
namespace: bjj  
commonLabels: # Etichete aplicate tuturor resurselor generate
  app.kubernetes.io/part-of: bjj # Grupează resursele ca parte a aplicației bjj
resources: # Listează toate manifestele care compun baza
- namespace.yaml # Creează namespace-ul aplicației
- config/configmap-bjjbackend.yaml # ConfigMap cu variabile de configurare
- storage/pvc-bjjbackend-lookup.yaml # PersistentVolumeClaim pentru fișierul DB
- services/service-bjjbackend-api.yaml # Service pentru expunerea internă a aplicației
- workloads/deployment-bjjbackend-chainsync.yaml # Deployment pentru procesul chainsync
- workloads/deployment-bjjbackend-api.yaml # Deployment pentru serverul principal

replacements:
- source:
    kind: ConfigMap
    name: configmap-bjjbackend
    fieldPath: data.DATA_PATH
  targets:
  - select:
      kind: Deployment
      name: deployment-bjjbackend-api
    fieldPaths:
    - spec.template.spec.containers.[name=container-bjjbackend-api].volumeMounts.[name=lookup-db].mountPath
  - select:
      kind: Deployment
      name: deployment-bjjbackend-chainsync
    fieldPaths:
    - spec.template.spec.containers.[name=container-bjjbackend-chainsync].volumeMounts.[name=lookup-db].mountPath



