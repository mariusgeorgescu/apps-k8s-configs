# Kustomize base pentru aplicația bjj (model app-owned)
# Setează namespace-ul implicit și etichetele comune, apoi compune
# resursele namespaced (ConfigMap, Gateway, Service, Deployments, etc.).
apiVersion: kustomize.config.k8s.io/v1beta1 # Versiunea API pentru Kustomize
kind: Kustomization # Declară acest fișier ca o Kustomization
namespace: bjj # Namespace implicit pentru toate resursele namespaced
commonLabels: # Etichete aplicate tuturor resurselor generate
  app.kubernetes.io/part-of: bjj # Grupează resursele ca parte a aplicației bjj
resources: # Listează toate manifestele care compun baza
- namespace.yaml # Creează namespace-ul aplicației
- config/configmap.yaml # ConfigMap cu variabile de configurare
- certificates/bjjbackend-cardano-vip.yaml # Certificat TLS pentru domeniu
- networking/gateways/main-gateway.yaml # Gateway cu listener-ele HTTP/HTTPS
- storage/lookup-pvc.yaml # PersistentVolumeClaim pentru fișierul DB
- services/server-svc.yaml # Service pentru expunerea internă a aplicației
- policies/bjj-server-pdb.yaml # PDB pentru disponibilitate la evictions
- workloads/chainsync-deploy.yaml # Deployment pentru procesul chainsync
- workloads/server-deploy.yaml # Deployment pentru serverul principal
- routes/bjj-httproutes.yaml # HTTPRoute-uri de rutare a traficului

