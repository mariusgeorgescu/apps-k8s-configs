# HTTPRoute: rutează traficul către Service-ul bjj-server.
apiVersion: gateway.networking.k8s.io/v1 # Versiunea API pentru HTTPRoute
kind: HTTPRoute # Tipul resursei este HTTPRoute
metadata: # Metadate Kubernetes
  name: bjj-redirect # Numele rutei de redirect
  namespace: bjj # Namespace-ul resursei
spec: # Specificația rutei
  parentRefs: # Gateway/Listener la care se atașează ruta
  - name: main-gateway # Numele Gateway-ului părinte
    sectionName: http # Listener-ul HTTP pe portul 80
  hostnames: # Domeniile pentru care se aplică ruta
  - bjjbackend.cardano.vip # Domeniul aplicației
  rules: # Reguli de rutare
  - filters: # Filtre aplicate request-urilor
    - type: RequestRedirect # Tipul filtrului: redirect
      requestRedirect: # Config redirect
        scheme: https # Forțează HTTPS
        statusCode: 301 # Status code permanent redirect
---
# HTTPRoute pentru traficul HTTPS către bjj-server.
apiVersion: gateway.networking.k8s.io/v1 # Versiunea API pentru HTTPRoute
kind: HTTPRoute # Tipul resursei este HTTPRoute
metadata: # Metadate Kubernetes
  name: bjj-server-route # Numele rutei către backend
  namespace: bjj # Namespace-ul resursei
spec: # Specificația rutei
  parentRefs: # Gateway/Listener părinte
  - name: main-gateway # Gateway-ul definit în base
    sectionName: https # Listener-ul HTTPS pe portul 443
  hostnames: # Domeniile pentru care se aplică ruta
  - bjjbackend.cardano.vip # Domeniul aplicației
  rules: # Reguli de rutare
  - matches: # Tipare de potrivire pentru cereri
    - path:
        type: PathPrefix # Tipul de potrivire pe cale
        value: / # Toate căile
    backendRefs: # Backendurile către care se forwardează traficul
    - name: bjj-server # Numele Service-ului backend
      port: 8082 # Portul backendului
